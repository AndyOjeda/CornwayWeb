// <auto-generated />
using System;
using CornwayWeb.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CornwayWeb.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CornwayWeb.Model.Cosecha", b =>
                {
                    b.Property<int>("IdCosecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCosecha"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasMaxLength(10)
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCultivo")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("IdCosecha");

                    b.HasIndex("IdCultivo");

                    b.ToTable("Cosechas");
                });

            modelBuilder.Entity("CornwayWeb.Model.Cultivo", b =>
                {
                    b.Property<int>("IdCultivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCultivo"));

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IdTipoCultivo")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdCultivo");

                    b.HasIndex("IdTipoCultivo");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Cultivos");
                });

            modelBuilder.Entity("CornwayWeb.Model.GestionCultivo", b =>
                {
                    b.Property<int>("IdGestionCultivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGestionCultivo"));

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCultivo")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoGestionCultivo")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("IdGestionCultivo");

                    b.HasIndex("IdCultivo");

                    b.HasIndex("IdTipoGestionCultivo");

                    b.ToTable("GestionCultivos");
                });

            modelBuilder.Entity("CornwayWeb.Model.InsumoGestionCultivo", b =>
                {
                    b.Property<int>("IdInsumoGestionCultivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInsumoGestionCultivo"));

                    b.Property<string>("Dosis")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IdGestionCultivo")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoInsumoGestionCultivo")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Unidad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdInsumoGestionCultivo");

                    b.HasIndex("IdGestionCultivo");

                    b.HasIndex("IdTipoInsumoGestionCultivo");

                    b.ToTable("InsumoGestionCultivos");
                });

            modelBuilder.Entity("CornwayWeb.Model.Partida", b =>
                {
                    b.Property<int>("IdPartida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPartida"));

                    b.Property<int>("IdCosecha")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("IdPartida");

                    b.HasIndex("IdCosecha");

                    b.ToTable("Partidas");
                });

            modelBuilder.Entity("CornwayWeb.Model.TipoCultivo", b =>
                {
                    b.Property<int>("IdTipoCultivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoCultivo"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdTipoCultivo");

                    b.ToTable("TipoCultivos");
                });

            modelBuilder.Entity("CornwayWeb.Model.TipoGestionCultivo", b =>
                {
                    b.Property<int>("IdTipoGestionCultivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoGestionCultivo"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdTipoGestionCultivo");

                    b.ToTable("TipoGestionCultivos");
                });

            modelBuilder.Entity("CornwayWeb.Model.TipoInsumoGestionCultivo", b =>
                {
                    b.Property<int>("IdTipoInsumoGestionCultivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoInsumoGestionCultivo"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdTipoInsumoGestionCultivo");

                    b.ToTable("TipoInsumoGestionCultivos");
                });

            modelBuilder.Entity("CornwayWeb.Model.TipoUsuario", b =>
                {
                    b.Property<int>("IdTipoUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoUsuario"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdTipoUsuario");

                    b.ToTable("TipoUsuarios");
                });

            modelBuilder.Entity("CornwayWeb.Model.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("IdTipoUsuario")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdTipoUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("CornwayWeb.Models.InsumoCultivo", b =>
                {
                    b.Property<int>("IdInsumoCultivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInsumoCultivo"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoInsumoGestionCultivo")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("IdInsumoCultivo");

                    b.HasIndex("IdTipoInsumoGestionCultivo");

                    b.ToTable("InsumoCultivos");
                });

            modelBuilder.Entity("CornwayWeb.Model.Cosecha", b =>
                {
                    b.HasOne("CornwayWeb.Model.Cultivo", "Cultivo")
                        .WithMany()
                        .HasForeignKey("IdCultivo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cultivo");
                });

            modelBuilder.Entity("CornwayWeb.Model.Cultivo", b =>
                {
                    b.HasOne("CornwayWeb.Model.TipoCultivo", "TipoCultivo")
                        .WithMany()
                        .HasForeignKey("IdTipoCultivo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CornwayWeb.Model.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoCultivo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CornwayWeb.Model.GestionCultivo", b =>
                {
                    b.HasOne("CornwayWeb.Model.Cultivo", "Cultivo")
                        .WithMany()
                        .HasForeignKey("IdCultivo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CornwayWeb.Model.TipoGestionCultivo", "TipoGestionCultivo")
                        .WithMany()
                        .HasForeignKey("IdTipoGestionCultivo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cultivo");

                    b.Navigation("TipoGestionCultivo");
                });

            modelBuilder.Entity("CornwayWeb.Model.InsumoGestionCultivo", b =>
                {
                    b.HasOne("CornwayWeb.Model.GestionCultivo", "GestionCultivo")
                        .WithMany()
                        .HasForeignKey("IdGestionCultivo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CornwayWeb.Model.TipoInsumoGestionCultivo", "TipoInsumoGestionCultivo")
                        .WithMany()
                        .HasForeignKey("IdTipoInsumoGestionCultivo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GestionCultivo");

                    b.Navigation("TipoInsumoGestionCultivo");
                });

            modelBuilder.Entity("CornwayWeb.Model.Partida", b =>
                {
                    b.HasOne("CornwayWeb.Model.Cosecha", "Cosecha")
                        .WithMany()
                        .HasForeignKey("IdCosecha")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cosecha");
                });

            modelBuilder.Entity("CornwayWeb.Model.Usuario", b =>
                {
                    b.HasOne("CornwayWeb.Model.TipoUsuario", "TipoUsuario")
                        .WithMany()
                        .HasForeignKey("IdTipoUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoUsuario");
                });

            modelBuilder.Entity("CornwayWeb.Models.InsumoCultivo", b =>
                {
                    b.HasOne("CornwayWeb.Model.TipoInsumoGestionCultivo", "TipoInsumoGestionCultivo")
                        .WithMany()
                        .HasForeignKey("IdTipoInsumoGestionCultivo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoInsumoGestionCultivo");
                });
#pragma warning restore 612, 618
        }
    }
}
